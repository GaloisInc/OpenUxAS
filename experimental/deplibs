#! /usr/local/bin/xs --

pgm = $0
fn usage {
	cat <<EOF
usage: $pgm [-d] -l LIBDIR [-l LIBDIR]... object

Find library files that are referenced by the given ELF object.

-d		enable debug output
-l LBIDIR	specify library directory to search
EOF
	exit 1
}

# Parse args.
debug = false
libdirs =
extfile =
while {~ $*(1) -*} {
	~ $*(1) -d && {debug = true; * = $*(2 ...)}
	~ $*(1) -l && {
		access -d -- $*(2) || throw error deplibs $*(2) not directory
		libdirs = $libdirs $*(2)
		* = $*(3 ...)
	}
}
~ $#* 1 || usage
extfile = $*

# List externs provided by application and third-party libraries.
# Note: The -l option is only effective when scanning objects
#       created by a debug build.
$debug && echo S $libdirs >[1=2]
donors = `mktemp
find $libdirs -name \*.a -print0 |xargs -0 nm --defined-only -glAC >$donors

# Initialize housekeeping.
open = $extfile
closed =

# Gather.
while {!~ $open ()} {
	(f open) = $open
	$debug && echo F $f >[1=2]
	libi = `` \n {grep -f <{
		# List externs that must be satisfied
		# by non-system libraries.
		 nm -uC $f |tail -n+3 |grep -v -e '^ \+U \(typeinfo' \
			^'\|VTT\|vtable\|operator\|std::\+\)' \
		|grep -v -e '^ \+[wU] [^:]\+$' |awk '{print $2}'
		} $donors |cut -d: -f1|sort|uniq}
	closed = $f $closed
	for l $libi {
		if {!~ $l $closed && !~ $l $open} {
			open = $l $open
			$debug && echo L $l >[1=2]
		}
	}
}

# Report.
for c $closed {echo $c} |sort
