- Rework one or more demos to run with disaggregated task01.
  - startup scripts
  - config files

- Are there tasks/services that require dependent instantiation?

- The 'DO NOT REMOVE - ...' lines in src/Services/00_ServiceList.h are
  self-referential; the following line was most recently added by
  src/Services/00_NewService.py or src/Tasks/00_NewTask.py. Thus *all*
  files referenced are candidates (subject to yet-undiscovered dependencies)
  for disaggregation.

- Plan a new directory layout and builder to support disaggregation of
  all targeted tasks and services. (This list is tentative, pending a
  better understanding of OpenUxAS architecture. See above.)
    AngledAreaSearchTaskService
    AssignmentCoordinatorTaskService [in-progress]
    AutomationDiagramDataService
    BlockadeTaskService
    CmasiAreaSearchTaskService
    CmasiLineSearchTaskService
    CmasiPointSearchTaskService
    CommRelayTaskService
    CordonTaskService
    EscortTaskService
    ImpactLineSearchTaskService
    ImpactPointSearchTaskService
    LoiterLeash
    LoiterTaskService
    MessageLoggerDataService
    MultiVehicleWatchTaskService
    MustFlyTaskService
    OverwatchTaskService
    PatternSearchTaskService
    RendezvousTask
    StatusReportService
    TaskManagerService
    TaskTrackerService

- Disaggregate all targeted tasks and services.

===

From meeting Jan 18th:

Create UxAS base and external service(s).
  - Each must have its own 00_ServiceList.h.
  - What *is* the common base?

Look at lmcpgen; it can regenerate an LMCP stack w/ proper dependencies - no
need to do this by hand.

There's a Python2 Amase that speaks LMCP directly.

Stretch goal for March: WaterwaySearch or DistributedCooperation in multiple
processes.

Two cycles left (Feb, Mar).

- How do I identify assets created/referenced by LmcpGen?
  - I need to be able to subset these.
  - See RunLmcpGen.sh.
  > New tools created: extract-lmcp-deps and extract-all-lmcp-deps
    - What can be inferred about tasks/services without LCMP dependency?
    - Attempt to generate build assets (directory structure, meson.build)
      for disaggregated tasks/services.
      - Try to build a "base UxAS" (*no* services) first.
